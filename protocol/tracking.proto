syntax = "proto3";

package biotracker;

message Feature {
  // Nodes with coordinates in image space, unit is pixels
  repeated SkeletonNode image_nodes = 1;
  // Features with coordinates in arena space, unit is centimeter
  repeated SkeletonNode world_nodes = 5;
  // Confidence score of the feature
  float score = 2;
  // Is the feature inside the tracking area?
  optional bool out_of_bounds = 3;
  // Id of the animal
  optional uint32 id = 4;
}

message Features {
  repeated Feature features = 1;
  uint32 frame_number = 3;
}

message Track {
  SkeletonDescriptor skeleton = 1;
  // A track may be recorded and rerecorded multiple times. If a video is
  // recorded, the track should work with both the original and the recorded
  // video. We use the video frame count as a simple heuristic to match tracks
  // to videos: if any stored frame count matches the video frame count, its
  // offset is applied. Otherwise, the track starts at frame 0.
  uint32 original_frame_count = 3;
  uint32 original_track_start = 4;
  // Map from frame number to features. The frame numbers always start at 0. If
  // applicable, they must be offset by a FrameOffset during replay.
  map<uint32, Features> features = 2;
}

message SkeletonNode {
  float x = 1;
  float y = 2;
  float score = 3;
}

message SkeletonEdge {
  uint32 source = 1;
  uint32 target = 2;
}

message SkeletonDescriptor {
  uint32 id = 5;
  repeated SkeletonEdge edges = 1;
  repeated string node_names = 2;
  uint32 front_index = 3;
  uint32 center_index = 4;
}

message Pose {
  // Centroid x-coordinate
  float x = 1;
  // Centroid y-coordinate
  float y = 2;
  // Animal orientation in radians
  float orientation = 3;
}
